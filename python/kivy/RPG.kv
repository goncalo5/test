#:kivy 1.0.9

<Resources>:
    cols: 5
    Label:
        text: "Resources"
        color: 0,1,0,1
    GridLayout:
        cols: 1
        Label:
            text: "food"
        Label:
            text: str(int(root.food.n))
    GridLayout:
        cols: 1
        Label:
            text: "wood"
        Label:
            text: str(int(root.wood.n))
    GridLayout:
        cols: 1
        Label:
            text: "stone"
        Label:
            text: str(int(root.stone.n))
    GridLayout:
        cols: 1
        Label:
            text: "metal"
        Label:
            text: str(int(root.metal.n))
        
<Units>:
    cols: 6
    Label:
        text: "Units"
        color: 1,0,0,1
    GridLayout:
        cols: 1
        Label:
            text: root.villager.name
        Label:
            text: str(root.villager.n)
    GridLayout:
        cols: 1
        Label:
            text: root.spearman.name
        Label:
            text: str(root.spearman.n)
    GridLayout:
        cols: 1
        Label:
            text: root.axeman.name
        Label:
            text: str(root.axeman.n)
    GridLayout:
        cols: 1
        Label:
            text: root.swordman.name
        Label:
            text: str(root.swordman.n)
    GridLayout:
        cols: 1
        Label:
            text: root.cavalry.name
        Label:
            text: str(root.cavalry.n)


<CustomInput@TextInput>:
    text: "1"
    multiline: False
    size_hint : (None, None)
    width: self.parent.width * 0.8
    height: self.parent.height / 2
    pos: (self.parent.x, self.parent.center_y-self.parent.height/4)


<RecruitMenu>:
    cols: 6
    Label:
        text: "Unit:"
    Label:
        text: "Food:"
    Label:
        text: "Wood:"
    Label:
        text: "Stone:"
    Label:
        text: "Metal:"
    Label:
        text: "n:"
    # villager
    Label:
        text: str(app.game.units.villager.name)
    Label:
        text: str(app.game.units.villager.cost.get("food", "0"))
    Label:
        text: str(app.game.units.villager.cost.get("wood", "0"))
    Label:
        text: str(app.game.units.villager.cost.get("stone", "0"))
    Label:
        text: str(app.game.units.villager.cost.get("metal", "0"))
    FloatLayout:
        CustomInput:
            on_text_validate: app.root.recruit(app.root.units.villager, self.text)
    # spearman
    Label:
        text: str(app.game.units.spearman.name)
    Label:
        text: str(app.game.units.spearman.cost.get("food", "0"))
    Label:
        text: str(app.game.units.spearman.cost.get("wood", "0"))
    Label:
        text: str(app.game.units.spearman.cost.get("stone", "0"))
    Label:
        text: str(app.game.units.spearman.cost.get("metal", "0"))
    FloatLayout:
        CustomInput:
            on_text_validate: app.root.recruit(app.root.units.spearman, self.text)
    # axeman
    Label:
        text: str(app.game.units.axeman.name)
    Label:
        text: str(app.game.units.axeman.cost.get("food", "0"))
    Label:
        text: str(app.game.units.axeman.cost.get("wood", "0"))
    Label:
        text: str(app.game.units.axeman.cost.get("stone", "0"))
    Label:
        text: str(app.game.units.axeman.cost.get("metal", "0"))
    FloatLayout:
        CustomInput:
            on_text_validate: app.root.recruit(app.root.units.axeman, self.text)
    # swordman
    Label:
        text: str(app.game.units.swordman.name)
    Label:
        text: str(app.game.units.swordman.cost.get("food", "0"))
    Label:
        text: str(app.game.units.swordman.cost.get("wood", "0"))
    Label:
        text: str(app.game.units.swordman.cost.get("stone", "0"))
    Label:
        text: str(app.game.units.swordman.cost.get("metal", "0"))
    FloatLayout:
        CustomInput:
            on_text_validate: app.root.recruit(app.root.units.swordman, self.text)
    # cavalry
    Label:
        text: str(app.game.units.cavalry.name)
    Label:
        text: str(app.game.units.cavalry.cost.get("food", "0"))
    Label:
        text: str(app.game.units.cavalry.cost.get("wood", "0"))
    Label:
        text: str(app.game.units.cavalry.cost.get("stone", "0"))
    Label:
        text: str(app.game.units.cavalry.cost.get("metal", "0"))
    FloatLayout:
        CustomInput:
            on_text_validate: app.root.recruit(app.root.units.cavalry, self.text)

<Buildings>:
    cols: 7  # name food wood stone metal current_n change_n
    # Header
    Label:
        text: "name"
    Label:
        text: "food"
    Label:
        text: "wood"
    Label:
        text: "stone"
    Label:
        text: "metal"
    Label:
        text: "current"
    Label:
        text: "new"

    # Farm
    Label:
        text: root.farm.name
    Label:
        text: str(root.farm.resources_per_s["food"])
    Label:
        text: str(root.farm.resources_per_s["wood"])
    Label:
        text: str(root.farm.resources_per_s["stone"])
    Label:
        text: str(root.farm.resources_per_s["metal"])
    Label:
        text: str(int(root.farm.n))
    FloatLayout:
        CustomInput:
            on_text_validate: app.game.change_people_working_in_a_building(root.farm, self.text)
    # forest_camp
    Label:
        text: root.forest_camp.name
    Label:
        text: str(root.forest_camp.resources_per_s["food"])
    Label:
        text: str(root.forest_camp.resources_per_s["wood"])
    Label:
        text: str(root.forest_camp.resources_per_s["stone"])
    Label:
        text: str(root.forest_camp.resources_per_s["metal"])
    Label:
        text: str(int(root.forest_camp.n))
    FloatLayout:
        CustomInput:
            on_text_validate: app.game.change_people_working_in_a_building(root.forest_camp, self.text)
    # quarry
    Label:
        text: root.quarry.name
    Label:
        text: str(root.quarry.resources_per_s["food"])
    Label:
        text: str(root.quarry.resources_per_s["wood"])
    Label:
        text: str(root.quarry.resources_per_s["stone"])
    Label:
        text: str(root.quarry.resources_per_s["metal"])
    Label:
        text: str(int(root.quarry.n))
    FloatLayout:
        CustomInput:
            on_text_validate: app.game.change_people_working_in_a_building(root.quarry, self.text)
    # mine
    Label:
        text: root.mine.name
    Label:
        text: str(root.mine.resources_per_s["food"])
    Label:
        text: str(root.mine.resources_per_s["wood"])
    Label:
        text: str(root.mine.resources_per_s["stone"])
    Label:
        text: str(root.mine.resources_per_s["metal"])
    Label:
        text: str(int(root.mine.n))
    FloatLayout:
        CustomInput:
            on_text_validate: app.game.change_people_working_in_a_building(root.mine, self.text)
    # total
    Label:
        text: "Total"
    Label:
        text: str(app.game.resources.food.per_s)
    Label:
        text: str(app.game.resources.wood.per_s)
    Label:
        text: str(app.game.resources.stone.per_s)
    Label:
        text: str(app.game.resources.metal.per_s)
    Label:
        text: str(int(root.mine.n))
    FloatLayout:
        CustomInput:
            on_text_validate: app.game.change_people_working_in_a_building(root.mine, self.text)

<Game>:
    cols: 1
    resources: resources
    units: units
    Resources:
        id: resources
        size_hint_y: 0.2
        canvas.before:
            Color:
                rgba: 0, 1, 0, .2
            Rectangle:
                pos: self.pos
                size: self.size
    Units:
        id: units
        size_hint_y: 0.2
        canvas.before:
            Color:
                rgba: 1, 0, 0, .2
            Rectangle:
                pos: self.pos
                size: self.size
    GridLayout:
        rows: 1
        TabbedPanel:
            do_default_tab: False
            tab_width: self.parent.width / 3

            TabbedPanelItem:
                text: "recruitment"
                RecruitMenu:
            TabbedPanelItem:
                text: "Increase resources"
                Buildings:
